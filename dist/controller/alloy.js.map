{"version":3,"sources":["../../src/controller/alloy.js"],"names":["config","db","api","get","req","res","find","err","alloys","send","json","findById","params","id","alloy","post","newAlloy","name","body","ratio","save","message","delete","remove","_id","put"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;kBAEc,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAChC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzB,oBAAMC,IAAN,CAAW,EAAX,EAAe,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9B,UAAID,GAAJ,EAAS;AACPF,YAAII,IAAJ,CAASF,GAAT;AACD;AACDF,UAAIK,IAAJ,CAASF,MAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAN,MAAIC,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,oBAAMM,QAAN,CAAeP,IAAIQ,MAAJ,CAAWC,EAA1B,EAA8B,UAACN,GAAD,EAAMO,KAAN,EAAgB;AAC5C,UAAIP,GAAJ,EAAS;AACPF,YAAII,IAAJ,CAASF,GAAT;AACD;AACDF,UAAIK,IAAJ,CAASI,KAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAZ,MAAIa,IAAJ,CAAS,MAAT,EAAiB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAIW,WAAW,qBAAf;AACAA,aAASC,IAAT,GAAgBb,IAAIc,IAAJ,CAASD,IAAzB;AACAD,aAASG,KAAT,GAAiBf,IAAIc,IAAJ,CAASC,KAA1B;;AAEAH,aAASI,IAAT,CAAc,UAASb,GAAT,EAAc;AAC1B,UAAIA,GAAJ,EAAS;AACPF,YAAII,IAAJ,CAASF,GAAT;AACD,OAFD,MAEK;AACHF,YAAIK,IAAJ,CAAS,EAAEW,SAAS,0BAAX,EAAT;AACD;AACF,KAND;AAOD,GAZD;;AAcA;AACAnB,MAAIoB,MAAJ,CAAW,MAAX,EAAmB,UAAClB,GAAD,EAAMC,GAAN,EAAc;AAC/B,oBAAMkB,MAAN,CAAa;AACXC,WAAKpB,IAAIQ,MAAJ,CAAWC;AADL,KAAb,EAEG,UAACN,GAAD,EAAMO,KAAN,EAAgB;AACjB,UAAIP,GAAJ,EAAS;AACPF,YAAII,IAAJ,CAASF,GAAT;AACD;AACCF,UAAIK,IAAJ,CAAS,EAACW,SAAS,4BAAV,EAAT;AACD,KAPH;AAQD,GATD;;AAWA;AACAnB,MAAIuB,GAAJ,CAAQ,MAAR,EAAgB,UAACrB,GAAD,EAAMC,GAAN,EAAc;AAC5B,oBAAMM,QAAN,CAAeP,IAAIQ,MAAJ,CAAWC,EAA1B,EAA8B,UAACN,GAAD,EAAMO,KAAN,EAAgB;AAC5C,UAAIP,GAAJ,EAAS;AACPF,YAAII,IAAJ,CAASF,GAAT;AACD;AACDS,eAASC,IAAT,GAAgBb,IAAIc,IAAJ,CAASD,IAAzB;AACAD,eAASG,KAAT,GAAiBf,IAAIc,IAAJ,CAASC,KAA1B;;AAEAL,YAAMM,IAAN,CAAW,UAASb,GAAT,EAAc;AACvB,YAAIA,GAAJ,EAAS;AACPF,cAAII,IAAJ,CAASF,GAAT;AACD;AACDF,YAAIK,IAAJ,CAAS,EAAEW,SAAS,oBAAX,EAAT;AACD,OALD;AAMD,KAbD;AAcD,GAfD;;AAiBA,SAAOnB,GAAP;AACD,C","file":"alloy.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Alloy from '../model/alloy';\nimport bodyParser from 'body-parser';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/alloy' - GET all test accts\n  api.get('/', (req, res) => {\n    Alloy.find({}, (err, alloys) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(alloys);\n    });\n  });\n\n  // '/v1/alloy/:id' - GET a specific test acct\n  api.get('/:id', (req, res) => {\n    Alloy.findById(req.params.id, (err, alloy) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(alloy);\n    });\n  });\n\n  // '/v1/alloy/add' - POST - add a test acct\n  api.post('/add', (req, res) => {\n    let newAlloy = new Alloy();\n    newAlloy.name = req.body.name;\n    newAlloy.ratio = req.body.ratio;\n\n    newAlloy.save(function(err) {\n      if (err) {\n        res.send(err);\n      }else{\n        res.json({ message: 'Alloy saved successfully' });\n      }\n    });\n  });\n\n  // '/v1/alloy/:id' - DELETE - remove a test acct\n  api.delete('/:id', (req, res) => {\n    Alloy.remove({\n      _id: req.params.id\n    }, (err, alloy) => {\n      if (err) {\n        res.send(err);\n      }\n        res.json({message: \"Alloy Successfully Removed\"});\n      });\n  });\n\n  // '/v1/alloy/:id' - PUT - update an existing record\n  api.put('/:id', (req, res) => {\n    Alloy.findById(req.params.id, (err, alloy) => {\n      if (err) {\n        res.send(err);\n      }\n      newAlloy.name = req.body.name;\n      newAlloy.ratio = req.body.ratio;\n      \n      alloy.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Alloy info updated' });\n      });\n    });\n  });\n\n  return api;\n}\n"]}